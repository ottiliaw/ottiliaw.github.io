{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/templates/blogTemplate.js"],"names":["Layout","children","style","display","margin","padding","Template","data","site","markdownRemark","siteMetadata","frontmatter","html","title","name","content","metaDescription","className","thumbnail","date","backgroundImage","dangerouslySetInnerHTML","__html","pageQuery"],"mappings":"qHAAA,iDAoCeA,IA/BA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEhB,OACE,oCACA,kBAAC,IAAD,MACA,yBACEC,MAAO,CACLC,QAAS,OACTC,OAAO,SACPC,QAAQ,wBAGR,8BACE,yBACEH,MAAO,CACLE,OAAO,SACPC,QAAQ,SAGTJ,Q,kCCxBb,0IAKe,SAASK,EAAT,GAEX,IADFC,EACC,EADDA,KAEQC,EAAyBD,EAAzBC,KAAMC,EAAmBF,EAAnBE,eACNC,EAAiBF,EAAjBE,aACAC,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KACrB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,+BAAQF,EAAaG,OACrB,0BAAMC,KAAK,cAAcC,QAASJ,EAAYK,mBAEhD,yBAAKC,UAAU,uBACb,6BAASA,UAAU,SAEfN,EAAYO,WACZ,yBAAKD,UAAU,kBACb,wBAAIA,UAAU,cAAcN,EAAYE,OACxC,yBAAKI,UAAU,aAAaN,EAAYQ,SAGzCR,EAAYO,WACb,yBAAKD,UAAU,iBAAiBf,MAAO,CAACkB,gBAAgB,OAAQT,EAAYO,UAArB,MACrD,wBAAID,UAAU,cAAcN,EAAYE,OACxC,yBAAKI,UAAU,aAAaN,EAAYQ,OAG5C,yBACEF,UAAU,oBACVI,wBAAyB,CAAEC,OAAQV,QAQxC,IAAMW,EAAS","file":"component---src-templates-blog-template-js-e6831948e9b992cb2839.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport \"./layout.css\"\nimport Header from \"./header.js\"\n\nconst Layout = ({ children }) => {\n\n  return (\n    <>\n    <Header />\n    <div\n      style={{\n        display: 'flex',\n        margin: `0 auto`,\n        padding: `0 1.0875rem 1.45rem`,\n      }}\n    >     \n        <main>\n          <div\n            style={{\n              margin: `0 auto`,\n              padding: `2rem`\n            }}>\n\n            {children}\n            </div>\n          </main>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport Helmet from 'react-helmet';\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { site, markdownRemark } = data // data.markdownRemark holds your post data\n  const { siteMetadata } = site\n  const { frontmatter, html } = markdownRemark\n  return (\n    <Layout>\n      <Helmet>\n        <title>{siteMetadata.title}</title>\n        <meta name=\"description\" content={frontmatter.metaDescription} />\n      </Helmet>\n      <div className=\"blog-post-container\">\n        <article className=\"post\">\n          \n          {!frontmatter.thumbnail && (\n            <div className=\"post-thumbnail\">\n              <h1 className=\"post-title\">{frontmatter.title}</h1>\n              <div className=\"post-meta\">{frontmatter.date}</div>\n            </div>\n          )}\n          {!!frontmatter.thumbnail && (\n            <div className=\"post-thumbnail\" style={{backgroundImage: `url(${frontmatter.thumbnail})`}}>\n              <h1 className=\"post-title\">{frontmatter.title}</h1>\n              <div className=\"post-meta\">{frontmatter.date}</div>\n            </div>\n          )}\n          <div\n            className=\"blog-post-content\"\n            dangerouslySetInnerHTML={{ __html: html }}\n          />\n        </article>\n      </div>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($path: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        path\n        title\n        thumbnail\n        metaDescription\n      }\n    }\n  }\n`"],"sourceRoot":""}