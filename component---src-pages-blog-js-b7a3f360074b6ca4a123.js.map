{"version":3,"sources":["webpack:///./src/components/layout.js","webpack:///./src/components/header.js","webpack:///./src/components/post-link.js","webpack:///./src/pages/blog.js"],"names":["Layout","children","style","display","margin","padding","Header","sx","mb","marginRight","className","to","PostLink","post","frontmatter","path","thumbnail","src","alt","title","date","pageQuery","BlogPage","data","Posts","site","allMarkdownRemark","edges","filter","edge","node","map","key","id"],"mappings":"oHAAA,iDAoCeA,IA/BA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEhB,OACE,oCACA,kBAAC,IAAD,MACA,yBACEC,MAAO,CACLC,QAAS,OACTC,OAAO,SACPC,QAAQ,wBAGR,8BACE,yBACEH,MAAO,CACLE,OAAO,SACPC,QAAQ,SAGTJ,Q,kCCxBb,qCA2BeK,IAxBA,WAEb,OACE,4BAAQC,GAAI,CAAEC,GAAI,CAAC,EAAG,KACpB,yBACIN,MAAO,CACLC,QAAS,OACTC,OAAO,SACPC,QAAQ,mBAGZ,yBAAKH,MAAO,CAACO,YAAa,SACtB,kBAAC,OAAD,CAAMC,UAAW,OAAQC,GAAG,KAA5B,YAGJ,kBAAC,OAAD,CAAMD,UAAW,OAAQC,GAAG,cAA5B,YACA,kBAAC,OAAD,CAAMD,UAAW,OAAQC,GAAG,iBAA5B,eACA,kBAAC,OAAD,CAAMD,UAAW,OAAQC,GAAG,oBAA5B,kBACA,kBAAC,OAAD,CAAMD,UAAW,OAAQC,GAAG,UAA5B,Y,oICDOC,EAjBE,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACf,6BAASH,UAAU,SACjB,kBAAC,OAAD,CAAMC,GAAIE,EAAKC,YAAYC,QACtBF,EAAKC,YAAYE,WAClB,yBAAKC,IAAKJ,EAAKC,YAAYE,UAAWE,IAAKL,EAAKC,YAAYK,MAAQ,qBAGxE,gCACE,wBAAIT,UAAU,cACZ,kBAAC,OAAD,CAAMC,GAAIE,EAAKC,YAAYC,KAAML,UAAU,aACxCG,EAAKC,YAAYK,QAGtB,yBAAKT,UAAU,aAAaG,EAAKC,YAAYM,SCWtCC,GADEC,UArBE,SAAC,GAKX,IAAD,IAJJC,KAMMC,GAFF,EAHFC,KAGE,EAFFC,kBAAqBC,MAKpBC,QAAO,SAAAC,GAAI,QAAMA,EAAKC,KAAKhB,YAAYM,QACvCW,KAAI,SAAAF,GAAI,OAAI,kBAAC,EAAD,CAAUG,IAAKH,EAAKC,KAAKG,GAAIpB,KAAMgB,EAAKC,WAEvD,OACE,kBAAC,IAAD,KACI,0CACF,yBAAKpB,UAAU,SACZc,KAOa","file":"component---src-pages-blog-js-b7a3f360074b6ca4a123.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport \"./layout.css\"\nimport Header from \"./header.js\"\n\nconst Layout = ({ children }) => {\n\n  return (\n    <>\n    <Header />\n    <div\n      style={{\n        display: 'flex',\n        margin: `0 auto`,\n        padding: `0 1.0875rem 1.45rem`,\n      }}\n    >     \n        <main>\n          <div\n            style={{\n              margin: `0 auto`,\n              padding: `2rem`\n            }}>\n\n            {children}\n            </div>\n          </main>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Header = () => {\n\n  return (\n    <header sx={{ mb: [5, 6] }}>\n      <div\n          style={{\n            display: 'flex',\n            margin: `0 auto`,\n            padding: `2rem 2rem 2rem`,\n          }}\n      > \n        <div style={{marginRight: '40px'}}>\n            <Link className={'home'} to=\"/\">ottilia</Link>\n        </div>\n        \n        <Link className={'link'} to=\"/about-me/\">about me</Link> \n        <Link className={'link'} to=\"/photography/\">photography</Link>\n        <Link className={'link'} to=\"/other-projects/\">other projects</Link>\n        <Link className={'link'} to=\"/blog/\">blog</Link>\n      </div>\n    </header>\n  )\n}\n\nexport default Header","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst PostLink = ({ post }) => (\n  <article className=\"card \">\n    <Link to={post.frontmatter.path}>\n      {!!post.frontmatter.thumbnail && (\n        <img src={post.frontmatter.thumbnail} alt={post.frontmatter.title + \"- Featured Shot\"} />\n      )}\n    </Link>\n    <header>\n      <h3 className=\"post-title\">\n        <Link to={post.frontmatter.path} className=\"post-link\">\n          {post.frontmatter.title}\n        </Link>\n      </h3>\n      <div className=\"post-meta\">{post.frontmatter.date}</div>\n    </header>\n  </article>\n)\nexport default PostLink","import React from \"react\"\nimport { graphql } from 'gatsby'\nimport Layout from \"../components/layout\"\nimport PostLink from \"../components/post-link\"\n\nconst BlogPage = ({\n  data: {\n    site,\n    allMarkdownRemark: { edges },\n  },\n}) => {\n\n  const Posts = edges\n    .filter(edge => !!edge.node.frontmatter.date) \n    .map(edge => <PostLink key={edge.node.id} post={edge.node} />)\n\n  return (\n    <Layout>\n        <h1>blog posts</h1>\n      <div className=\"grids\">\n        {Posts}\n      </div>\n    </Layout>\n  )\n}\n\nexport default BlogPage\nexport const pageQuery = graphql`\n  query blogPageQuery {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            title\n            thumbnail\n          }\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}